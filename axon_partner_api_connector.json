{
  "swagger": "2.0",
  "info": {
    "title": "Axon Partner API (Dataverse Integration)",
    "description": "Custom Connector for Axon Evidence Partner API to support Users, Groups, Devices, and Import Jobs. Replace the Agency Host during connection setup.",
    "version": "1.0.0"
  },
  "host": "youragencyname.evidence.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data",
    "application/x-www-form-urlencoded"
  ],
  "produces": [
    "application/json"
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://developers.axon.com/axonenterprise/"
    },
    {
      "propertyName": "Category",
      "propertyValue": "Security & Law Enforcement"
    }
  ],
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://youragencyname.evidence.com/api/oauth2/token"
    }
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "x-ms-connection-parameters": {
    "agencyHost": {
      "type": "string",
      "uiDefinition": {
        "displayName": "Agency Host (evidence.com subdomain)",
        "description": "Enter your Axon Evidence hostname, e.g., youragencyname.evidence.com",
        "tooltip": "Do not include https://",
        "constraints": {
          "required": true
        }
      }
    },
    "agencyId": {
      "type": "string",
      "uiDefinition": {
        "displayName": "Agency ID (UUID)",
        "description": "Axon Evidence Agency ID (UUID)",
        "constraints": {
          "required": true
        }
      }
    },
    "clientId": {
      "type": "string",
      "uiDefinition": {
        "displayName": "Client ID",
        "description": "API Client ID provisioned in Axon Evidence",
        "constraints": {
          "required": true
        }
      }
    },
    "clientSecret": {
      "type": "securestring",
      "uiDefinition": {
        "displayName": "Client Secret",
        "description": "API Client Secret (stored securely)",
        "constraints": {
          "required": true
        }
      }
    }
  },
  "x-ms-servers": [
    {
      "url": "https://{agencyHost}",
      "description": "Axon Evidence host for your agency",
      "variables": {
        "agencyHost": {
          "default": "youragencyname.evidence.com"
        }
      }
    }
  ],
  "paths": {
    "/v4/agencies/{agencyId}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "operationId": "ListUsers",
        "description": "Get information about all users in the agency. Supports filters and pagination.",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agency ID"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "badgeNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "externalId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "maximum": 500,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "5XX": {
            "description": "Server error"
          }
        }
      }
    },
    "/v4/agencies/{agencyId}/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Details",
        "operationId": "GetUserDetails",
        "description": "Get information about a single user by internal user ID.",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "5XX": {
            "description": "Server error"
          }
        }
      }
    },
    "/v4/agencies/{agencyId}/users/import": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Import Users (Create/Update)",
        "operationId": "ImportUsers",
        "description": "Submit a job for creating or updating user accounts via CSV. Optionally synchronize memberships.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "synchronize",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "synchronizeEvidenceGroups",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "users_file",
            "in": "formData",
            "required": true,
            "type": "file",
            "description": "CSV file with user records per Axon format"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "5XX": {
            "description": "Server error"
          }
        }
      }
    },
    "/v4/agencies/{agencyId}/users/import/{jobId}/results": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Import Job Results",
        "operationId": "GetImportJobResults",
        "description": "Get the results of a user import job. Paged up to 500 records per page.",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "5XX": {
            "description": "Server error"
          }
        }
      }
    },
    "/v1/agencies/{agencyId}/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "List Devices",
        "operationId": "ListDevices",
        "description": "Get a list of devices with optional filters.",
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "errorStatus",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastUploadFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lastUploadTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "maximum": 100,
            "minimum": 1
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "minimum": 0
          },
          {
            "name": "homeId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastFunctionalTestFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "lastFunctionalTestTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "noFunctionalTestInDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 30
          },
          {
            "name": "notDockedInDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "minimum": 30
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "5XX": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {}
}